/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.msyrpc.AddCategoryMarginRequest', null, global);
goog.exportSymbol('proto.msyrpc.AddCategoryMarginResponse', null, global);
goog.exportSymbol('proto.msyrpc.AddCompetitorRequest', null, global);
goog.exportSymbol('proto.msyrpc.AddCompetitorResponse', null, global);
goog.exportSymbol('proto.msyrpc.AllCategoryTypesResponse', null, global);
goog.exportSymbol('proto.msyrpc.AllCompetitorTypesResponse', null, global);
goog.exportSymbol('proto.msyrpc.AllNewCategoryTypesResponse', null, global);
goog.exportSymbol('proto.msyrpc.AllStateCategoryTypesRequest', null, global);
goog.exportSymbol('proto.msyrpc.AllStateCategoryTypesResponse', null, global);
goog.exportSymbol('proto.msyrpc.Category', null, global);
goog.exportSymbol('proto.msyrpc.CategoryData', null, global);
goog.exportSymbol('proto.msyrpc.CategoryMargin', null, global);
goog.exportSymbol('proto.msyrpc.Competitor', null, global);
goog.exportSymbol('proto.msyrpc.CompetitorPrice', null, global);
goog.exportSymbol('proto.msyrpc.DeleteCategoryMarginRequest', null, global);
goog.exportSymbol('proto.msyrpc.DeleteCategoryMarginResponse', null, global);
goog.exportSymbol('proto.msyrpc.DeleteCompetitorRequest', null, global);
goog.exportSymbol('proto.msyrpc.DeleteCompetitorResponse', null, global);
goog.exportSymbol('proto.msyrpc.GetAllCategoryTypesRequest', null, global);
goog.exportSymbol('proto.msyrpc.GetAllCompetitorTypesRequest', null, global);
goog.exportSymbol('proto.msyrpc.GetAllNewCategoryTypesRequest', null, global);
goog.exportSymbol('proto.msyrpc.GetCategoryMarginRequest', null, global);
goog.exportSymbol('proto.msyrpc.GetCategoryMarginResponse', null, global);
goog.exportSymbol('proto.msyrpc.GetCategoryMarginResponseItem', null, global);
goog.exportSymbol('proto.msyrpc.GetProductComparisonRequest', null, global);
goog.exportSymbol('proto.msyrpc.Product', null, global);
goog.exportSymbol('proto.msyrpc.ProductComparisonResponse', null, global);
goog.exportSymbol('proto.msyrpc.StateCategory', null, global);
goog.exportSymbol('proto.msyrpc.UpdateCategoryStateRequest', null, global);
goog.exportSymbol('proto.msyrpc.UpdateCategoryStateResponse', null, global);
goog.exportSymbol('proto.msyrpc.UpdateCompetitorTierRequest', null, global);
goog.exportSymbol('proto.msyrpc.UpdateCompetitorTierResponse', null, global);
goog.exportSymbol('proto.msyrpc.UpdateProductDescriptionRequest', null, global);
goog.exportSymbol('proto.msyrpc.UpdateProductDescriptionResponse', null, global);
goog.exportSymbol('proto.msyrpc.UpdatedCompetitor', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.Competitor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.Competitor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.Competitor.displayName = 'proto.msyrpc.Competitor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.Competitor.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.Competitor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.Competitor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.Competitor.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tier: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.Competitor}
 */
proto.msyrpc.Competitor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.Competitor;
  return proto.msyrpc.Competitor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.Competitor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.Competitor}
 */
proto.msyrpc.Competitor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.Competitor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.Competitor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.Competitor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.Competitor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTier();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.msyrpc.Competitor.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msyrpc.Competitor.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.msyrpc.Competitor.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.msyrpc.Competitor.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tier = 3;
 * @return {string}
 */
proto.msyrpc.Competitor.prototype.getTier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.msyrpc.Competitor.prototype.setTier = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.Category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.Category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.Category.displayName = 'proto.msyrpc.Category';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.Category.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.Category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.Category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.Category.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.Category}
 */
proto.msyrpc.Category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.Category;
  return proto.msyrpc.Category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.Category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.Category}
 */
proto.msyrpc.Category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.Category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.Category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.Category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.Category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.msyrpc.Category.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msyrpc.Category.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.msyrpc.Category.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.msyrpc.Category.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.CompetitorPrice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.CompetitorPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.CompetitorPrice.displayName = 'proto.msyrpc.CompetitorPrice';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.CompetitorPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.CompetitorPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.CompetitorPrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.CompetitorPrice.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.CompetitorPrice}
 */
proto.msyrpc.CompetitorPrice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.CompetitorPrice;
  return proto.msyrpc.CompetitorPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.CompetitorPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.CompetitorPrice}
 */
proto.msyrpc.CompetitorPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.CompetitorPrice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.CompetitorPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.CompetitorPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.CompetitorPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.msyrpc.CompetitorPrice.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.CompetitorPrice.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double price = 2;
 * @return {number}
 */
proto.msyrpc.CompetitorPrice.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.msyrpc.CompetitorPrice.prototype.setPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.Product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.Product.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.Product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.Product.displayName = 'proto.msyrpc.Product';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.Product.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.Product.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.Product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.Product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.Product.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    productcode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productdescription: jspb.Message.getFieldWithDefault(msg, 3, ""),
    keywords: jspb.Message.getFieldWithDefault(msg, 4, ""),
    costprice: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    salesprice: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    competitorpricesList: jspb.Message.toObjectList(msg.getCompetitorpricesList(),
    proto.msyrpc.CompetitorPrice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.Product}
 */
proto.msyrpc.Product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.Product;
  return proto.msyrpc.Product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.Product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.Product}
 */
proto.msyrpc.Product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductcode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductdescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeywords(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCostprice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSalesprice(value);
      break;
    case 7:
      var value = new proto.msyrpc.CompetitorPrice;
      reader.readMessage(value,proto.msyrpc.CompetitorPrice.deserializeBinaryFromReader);
      msg.addCompetitorprices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.Product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.Product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.Product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.Product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProductcode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductdescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKeywords();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCostprice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSalesprice();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getCompetitorpricesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.msyrpc.CompetitorPrice.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.msyrpc.Product.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msyrpc.Product.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string productCode = 2;
 * @return {string}
 */
proto.msyrpc.Product.prototype.getProductcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.msyrpc.Product.prototype.setProductcode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string productDescription = 3;
 * @return {string}
 */
proto.msyrpc.Product.prototype.getProductdescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.msyrpc.Product.prototype.setProductdescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string keywords = 4;
 * @return {string}
 */
proto.msyrpc.Product.prototype.getKeywords = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.msyrpc.Product.prototype.setKeywords = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double costPrice = 5;
 * @return {number}
 */
proto.msyrpc.Product.prototype.getCostprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.msyrpc.Product.prototype.setCostprice = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double salesPrice = 6;
 * @return {number}
 */
proto.msyrpc.Product.prototype.getSalesprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.msyrpc.Product.prototype.setSalesprice = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * repeated CompetitorPrice competitorPrices = 7;
 * @return {!Array<!proto.msyrpc.CompetitorPrice>}
 */
proto.msyrpc.Product.prototype.getCompetitorpricesList = function() {
  return /** @type{!Array<!proto.msyrpc.CompetitorPrice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.CompetitorPrice, 7));
};


/** @param {!Array<!proto.msyrpc.CompetitorPrice>} value */
proto.msyrpc.Product.prototype.setCompetitorpricesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.msyrpc.CompetitorPrice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.CompetitorPrice}
 */
proto.msyrpc.Product.prototype.addCompetitorprices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.msyrpc.CompetitorPrice, opt_index);
};


proto.msyrpc.Product.prototype.clearCompetitorpricesList = function() {
  this.setCompetitorpricesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.GetAllCategoryTypesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.GetAllCategoryTypesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.GetAllCategoryTypesRequest.displayName = 'proto.msyrpc.GetAllCategoryTypesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.GetAllCategoryTypesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.GetAllCategoryTypesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.GetAllCategoryTypesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetAllCategoryTypesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.GetAllCategoryTypesRequest}
 */
proto.msyrpc.GetAllCategoryTypesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.GetAllCategoryTypesRequest;
  return proto.msyrpc.GetAllCategoryTypesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.GetAllCategoryTypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.GetAllCategoryTypesRequest}
 */
proto.msyrpc.GetAllCategoryTypesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.GetAllCategoryTypesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.GetAllCategoryTypesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.GetAllCategoryTypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetAllCategoryTypesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.GetAllCompetitorTypesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.GetAllCompetitorTypesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.GetAllCompetitorTypesRequest.displayName = 'proto.msyrpc.GetAllCompetitorTypesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.GetAllCompetitorTypesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.GetAllCompetitorTypesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.GetAllCompetitorTypesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetAllCompetitorTypesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.GetAllCompetitorTypesRequest}
 */
proto.msyrpc.GetAllCompetitorTypesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.GetAllCompetitorTypesRequest;
  return proto.msyrpc.GetAllCompetitorTypesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.GetAllCompetitorTypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.GetAllCompetitorTypesRequest}
 */
proto.msyrpc.GetAllCompetitorTypesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.GetAllCompetitorTypesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.GetAllCompetitorTypesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.GetAllCompetitorTypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetAllCompetitorTypesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.GetAllNewCategoryTypesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.GetAllNewCategoryTypesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.GetAllNewCategoryTypesRequest.displayName = 'proto.msyrpc.GetAllNewCategoryTypesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.GetAllNewCategoryTypesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.GetAllNewCategoryTypesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.GetAllNewCategoryTypesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetAllNewCategoryTypesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.GetAllNewCategoryTypesRequest}
 */
proto.msyrpc.GetAllNewCategoryTypesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.GetAllNewCategoryTypesRequest;
  return proto.msyrpc.GetAllNewCategoryTypesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.GetAllNewCategoryTypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.GetAllNewCategoryTypesRequest}
 */
proto.msyrpc.GetAllNewCategoryTypesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.GetAllNewCategoryTypesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.GetAllNewCategoryTypesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.GetAllNewCategoryTypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetAllNewCategoryTypesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.GetProductComparisonRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.GetProductComparisonRequest.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.GetProductComparisonRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.GetProductComparisonRequest.displayName = 'proto.msyrpc.GetProductComparisonRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.GetProductComparisonRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.GetProductComparisonRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.GetProductComparisonRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.GetProductComparisonRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetProductComparisonRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    categorytypesList: jspb.Message.getRepeatedField(msg, 1),
    competitorstypesList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.GetProductComparisonRequest}
 */
proto.msyrpc.GetProductComparisonRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.GetProductComparisonRequest;
  return proto.msyrpc.GetProductComparisonRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.GetProductComparisonRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.GetProductComparisonRequest}
 */
proto.msyrpc.GetProductComparisonRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setCategorytypesList(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setCompetitorstypesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.GetProductComparisonRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.GetProductComparisonRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.GetProductComparisonRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetProductComparisonRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategorytypesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = message.getCompetitorstypesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
};


/**
 * repeated int32 categoryTypes = 1;
 * @return {!Array<number>}
 */
proto.msyrpc.GetProductComparisonRequest.prototype.getCategorytypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<number>} value */
proto.msyrpc.GetProductComparisonRequest.prototype.setCategorytypesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.msyrpc.GetProductComparisonRequest.prototype.addCategorytypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.msyrpc.GetProductComparisonRequest.prototype.clearCategorytypesList = function() {
  this.setCategorytypesList([]);
};


/**
 * repeated int32 competitorsTypes = 2;
 * @return {!Array<number>}
 */
proto.msyrpc.GetProductComparisonRequest.prototype.getCompetitorstypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<number>} value */
proto.msyrpc.GetProductComparisonRequest.prototype.setCompetitorstypesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.msyrpc.GetProductComparisonRequest.prototype.addCompetitorstypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.msyrpc.GetProductComparisonRequest.prototype.clearCompetitorstypesList = function() {
  this.setCompetitorstypesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.UpdateProductDescriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.UpdateProductDescriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.UpdateProductDescriptionRequest.displayName = 'proto.msyrpc.UpdateProductDescriptionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.UpdateProductDescriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.UpdateProductDescriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.UpdateProductDescriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateProductDescriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    updateddescription: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.UpdateProductDescriptionRequest}
 */
proto.msyrpc.UpdateProductDescriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.UpdateProductDescriptionRequest;
  return proto.msyrpc.UpdateProductDescriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.UpdateProductDescriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.UpdateProductDescriptionRequest}
 */
proto.msyrpc.UpdateProductDescriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdateddescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.UpdateProductDescriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.UpdateProductDescriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.UpdateProductDescriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateProductDescriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdateddescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string productCode = 1;
 * @return {string}
 */
proto.msyrpc.UpdateProductDescriptionRequest.prototype.getProductcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.UpdateProductDescriptionRequest.prototype.setProductcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string updatedDescription = 2;
 * @return {string}
 */
proto.msyrpc.UpdateProductDescriptionRequest.prototype.getUpdateddescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.msyrpc.UpdateProductDescriptionRequest.prototype.setUpdateddescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.CategoryData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.CategoryData.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.CategoryData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.CategoryData.displayName = 'proto.msyrpc.CategoryData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.CategoryData.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.CategoryData.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.CategoryData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.CategoryData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.CategoryData.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.msyrpc.Category.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.CategoryData}
 */
proto.msyrpc.CategoryData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.CategoryData;
  return proto.msyrpc.CategoryData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.CategoryData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.CategoryData}
 */
proto.msyrpc.CategoryData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.msyrpc.Category;
      reader.readMessage(value,proto.msyrpc.Category.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.CategoryData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.CategoryData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.CategoryData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.CategoryData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.msyrpc.Category.serializeBinaryToWriter
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.msyrpc.CategoryData.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.CategoryData.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Category data = 2;
 * @return {!Array<!proto.msyrpc.Category>}
 */
proto.msyrpc.CategoryData.prototype.getDataList = function() {
  return /** @type{!Array<!proto.msyrpc.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.Category, 2));
};


/** @param {!Array<!proto.msyrpc.Category>} value */
proto.msyrpc.CategoryData.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.msyrpc.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.Category}
 */
proto.msyrpc.CategoryData.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.msyrpc.Category, opt_index);
};


proto.msyrpc.CategoryData.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.AllNewCategoryTypesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.AllNewCategoryTypesResponse.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.AllNewCategoryTypesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.AllNewCategoryTypesResponse.displayName = 'proto.msyrpc.AllNewCategoryTypesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.AllNewCategoryTypesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.AllNewCategoryTypesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.AllNewCategoryTypesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.AllNewCategoryTypesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllNewCategoryTypesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryList: jspb.Message.toObjectList(msg.getCategoryList(),
    proto.msyrpc.CategoryData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.AllNewCategoryTypesResponse}
 */
proto.msyrpc.AllNewCategoryTypesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.AllNewCategoryTypesResponse;
  return proto.msyrpc.AllNewCategoryTypesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.AllNewCategoryTypesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.AllNewCategoryTypesResponse}
 */
proto.msyrpc.AllNewCategoryTypesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msyrpc.CategoryData;
      reader.readMessage(value,proto.msyrpc.CategoryData.deserializeBinaryFromReader);
      msg.addCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.AllNewCategoryTypesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.AllNewCategoryTypesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.AllNewCategoryTypesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllNewCategoryTypesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msyrpc.CategoryData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CategoryData category = 1;
 * @return {!Array<!proto.msyrpc.CategoryData>}
 */
proto.msyrpc.AllNewCategoryTypesResponse.prototype.getCategoryList = function() {
  return /** @type{!Array<!proto.msyrpc.CategoryData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.CategoryData, 1));
};


/** @param {!Array<!proto.msyrpc.CategoryData>} value */
proto.msyrpc.AllNewCategoryTypesResponse.prototype.setCategoryList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msyrpc.CategoryData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.CategoryData}
 */
proto.msyrpc.AllNewCategoryTypesResponse.prototype.addCategory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msyrpc.CategoryData, opt_index);
};


proto.msyrpc.AllNewCategoryTypesResponse.prototype.clearCategoryList = function() {
  this.setCategoryList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.AllCategoryTypesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.AllCategoryTypesResponse.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.AllCategoryTypesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.AllCategoryTypesResponse.displayName = 'proto.msyrpc.AllCategoryTypesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.AllCategoryTypesResponse.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.AllCategoryTypesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.AllCategoryTypesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllCategoryTypesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    categorydailyList: jspb.Message.toObjectList(msg.getCategorydailyList(),
    proto.msyrpc.Category.toObject, includeInstance),
    categorymondayandthursdayList: jspb.Message.toObjectList(msg.getCategorymondayandthursdayList(),
    proto.msyrpc.Category.toObject, includeInstance),
    categorytuesdayandfridayList: jspb.Message.toObjectList(msg.getCategorytuesdayandfridayList(),
    proto.msyrpc.Category.toObject, includeInstance),
    categorywednesdayandsaturdayList: jspb.Message.toObjectList(msg.getCategorywednesdayandsaturdayList(),
    proto.msyrpc.Category.toObject, includeInstance),
    categoryunassignedList: jspb.Message.toObjectList(msg.getCategoryunassignedList(),
    proto.msyrpc.Category.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.AllCategoryTypesResponse}
 */
proto.msyrpc.AllCategoryTypesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.AllCategoryTypesResponse;
  return proto.msyrpc.AllCategoryTypesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.AllCategoryTypesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.AllCategoryTypesResponse}
 */
proto.msyrpc.AllCategoryTypesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msyrpc.Category;
      reader.readMessage(value,proto.msyrpc.Category.deserializeBinaryFromReader);
      msg.addCategorydaily(value);
      break;
    case 2:
      var value = new proto.msyrpc.Category;
      reader.readMessage(value,proto.msyrpc.Category.deserializeBinaryFromReader);
      msg.addCategorymondayandthursday(value);
      break;
    case 3:
      var value = new proto.msyrpc.Category;
      reader.readMessage(value,proto.msyrpc.Category.deserializeBinaryFromReader);
      msg.addCategorytuesdayandfriday(value);
      break;
    case 4:
      var value = new proto.msyrpc.Category;
      reader.readMessage(value,proto.msyrpc.Category.deserializeBinaryFromReader);
      msg.addCategorywednesdayandsaturday(value);
      break;
    case 5:
      var value = new proto.msyrpc.Category;
      reader.readMessage(value,proto.msyrpc.Category.deserializeBinaryFromReader);
      msg.addCategoryunassigned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.AllCategoryTypesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.AllCategoryTypesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllCategoryTypesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategorydailyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msyrpc.Category.serializeBinaryToWriter
    );
  }
  f = message.getCategorymondayandthursdayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.msyrpc.Category.serializeBinaryToWriter
    );
  }
  f = message.getCategorytuesdayandfridayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.msyrpc.Category.serializeBinaryToWriter
    );
  }
  f = message.getCategorywednesdayandsaturdayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.msyrpc.Category.serializeBinaryToWriter
    );
  }
  f = message.getCategoryunassignedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.msyrpc.Category.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Category categoryDaily = 1;
 * @return {!Array<!proto.msyrpc.Category>}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.getCategorydailyList = function() {
  return /** @type{!Array<!proto.msyrpc.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.Category, 1));
};


/** @param {!Array<!proto.msyrpc.Category>} value */
proto.msyrpc.AllCategoryTypesResponse.prototype.setCategorydailyList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msyrpc.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.Category}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.addCategorydaily = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msyrpc.Category, opt_index);
};


proto.msyrpc.AllCategoryTypesResponse.prototype.clearCategorydailyList = function() {
  this.setCategorydailyList([]);
};


/**
 * repeated Category categoryMondayAndThursday = 2;
 * @return {!Array<!proto.msyrpc.Category>}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.getCategorymondayandthursdayList = function() {
  return /** @type{!Array<!proto.msyrpc.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.Category, 2));
};


/** @param {!Array<!proto.msyrpc.Category>} value */
proto.msyrpc.AllCategoryTypesResponse.prototype.setCategorymondayandthursdayList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.msyrpc.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.Category}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.addCategorymondayandthursday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.msyrpc.Category, opt_index);
};


proto.msyrpc.AllCategoryTypesResponse.prototype.clearCategorymondayandthursdayList = function() {
  this.setCategorymondayandthursdayList([]);
};


/**
 * repeated Category categoryTuesdayAndFriday = 3;
 * @return {!Array<!proto.msyrpc.Category>}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.getCategorytuesdayandfridayList = function() {
  return /** @type{!Array<!proto.msyrpc.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.Category, 3));
};


/** @param {!Array<!proto.msyrpc.Category>} value */
proto.msyrpc.AllCategoryTypesResponse.prototype.setCategorytuesdayandfridayList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.msyrpc.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.Category}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.addCategorytuesdayandfriday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.msyrpc.Category, opt_index);
};


proto.msyrpc.AllCategoryTypesResponse.prototype.clearCategorytuesdayandfridayList = function() {
  this.setCategorytuesdayandfridayList([]);
};


/**
 * repeated Category categoryWednesdayAndSaturday = 4;
 * @return {!Array<!proto.msyrpc.Category>}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.getCategorywednesdayandsaturdayList = function() {
  return /** @type{!Array<!proto.msyrpc.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.Category, 4));
};


/** @param {!Array<!proto.msyrpc.Category>} value */
proto.msyrpc.AllCategoryTypesResponse.prototype.setCategorywednesdayandsaturdayList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msyrpc.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.Category}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.addCategorywednesdayandsaturday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msyrpc.Category, opt_index);
};


proto.msyrpc.AllCategoryTypesResponse.prototype.clearCategorywednesdayandsaturdayList = function() {
  this.setCategorywednesdayandsaturdayList([]);
};


/**
 * repeated Category categoryUnassigned = 5;
 * @return {!Array<!proto.msyrpc.Category>}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.getCategoryunassignedList = function() {
  return /** @type{!Array<!proto.msyrpc.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.Category, 5));
};


/** @param {!Array<!proto.msyrpc.Category>} value */
proto.msyrpc.AllCategoryTypesResponse.prototype.setCategoryunassignedList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msyrpc.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.Category}
 */
proto.msyrpc.AllCategoryTypesResponse.prototype.addCategoryunassigned = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msyrpc.Category, opt_index);
};


proto.msyrpc.AllCategoryTypesResponse.prototype.clearCategoryunassignedList = function() {
  this.setCategoryunassignedList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.AllCompetitorTypesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.AllCompetitorTypesResponse.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.AllCompetitorTypesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.AllCompetitorTypesResponse.displayName = 'proto.msyrpc.AllCompetitorTypesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.AllCompetitorTypesResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.AllCompetitorTypesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.AllCompetitorTypesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.AllCompetitorTypesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllCompetitorTypesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    competitorstieroneList: jspb.Message.toObjectList(msg.getCompetitorstieroneList(),
    proto.msyrpc.Competitor.toObject, includeInstance),
    competitorstiertwoList: jspb.Message.toObjectList(msg.getCompetitorstiertwoList(),
    proto.msyrpc.Competitor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.AllCompetitorTypesResponse}
 */
proto.msyrpc.AllCompetitorTypesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.AllCompetitorTypesResponse;
  return proto.msyrpc.AllCompetitorTypesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.AllCompetitorTypesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.AllCompetitorTypesResponse}
 */
proto.msyrpc.AllCompetitorTypesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msyrpc.Competitor;
      reader.readMessage(value,proto.msyrpc.Competitor.deserializeBinaryFromReader);
      msg.addCompetitorstierone(value);
      break;
    case 2:
      var value = new proto.msyrpc.Competitor;
      reader.readMessage(value,proto.msyrpc.Competitor.deserializeBinaryFromReader);
      msg.addCompetitorstiertwo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.AllCompetitorTypesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.AllCompetitorTypesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.AllCompetitorTypesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllCompetitorTypesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompetitorstieroneList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msyrpc.Competitor.serializeBinaryToWriter
    );
  }
  f = message.getCompetitorstiertwoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.msyrpc.Competitor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Competitor competitorsTierOne = 1;
 * @return {!Array<!proto.msyrpc.Competitor>}
 */
proto.msyrpc.AllCompetitorTypesResponse.prototype.getCompetitorstieroneList = function() {
  return /** @type{!Array<!proto.msyrpc.Competitor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.Competitor, 1));
};


/** @param {!Array<!proto.msyrpc.Competitor>} value */
proto.msyrpc.AllCompetitorTypesResponse.prototype.setCompetitorstieroneList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msyrpc.Competitor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.Competitor}
 */
proto.msyrpc.AllCompetitorTypesResponse.prototype.addCompetitorstierone = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msyrpc.Competitor, opt_index);
};


proto.msyrpc.AllCompetitorTypesResponse.prototype.clearCompetitorstieroneList = function() {
  this.setCompetitorstieroneList([]);
};


/**
 * repeated Competitor competitorsTierTwo = 2;
 * @return {!Array<!proto.msyrpc.Competitor>}
 */
proto.msyrpc.AllCompetitorTypesResponse.prototype.getCompetitorstiertwoList = function() {
  return /** @type{!Array<!proto.msyrpc.Competitor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.Competitor, 2));
};


/** @param {!Array<!proto.msyrpc.Competitor>} value */
proto.msyrpc.AllCompetitorTypesResponse.prototype.setCompetitorstiertwoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.msyrpc.Competitor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.Competitor}
 */
proto.msyrpc.AllCompetitorTypesResponse.prototype.addCompetitorstiertwo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.msyrpc.Competitor, opt_index);
};


proto.msyrpc.AllCompetitorTypesResponse.prototype.clearCompetitorstiertwoList = function() {
  this.setCompetitorstiertwoList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.ProductComparisonResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.ProductComparisonResponse.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.ProductComparisonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.ProductComparisonResponse.displayName = 'proto.msyrpc.ProductComparisonResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.ProductComparisonResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.ProductComparisonResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.ProductComparisonResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.ProductComparisonResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.ProductComparisonResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    productcomparisonList: jspb.Message.toObjectList(msg.getProductcomparisonList(),
    proto.msyrpc.Product.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.ProductComparisonResponse}
 */
proto.msyrpc.ProductComparisonResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.ProductComparisonResponse;
  return proto.msyrpc.ProductComparisonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.ProductComparisonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.ProductComparisonResponse}
 */
proto.msyrpc.ProductComparisonResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msyrpc.Product;
      reader.readMessage(value,proto.msyrpc.Product.deserializeBinaryFromReader);
      msg.addProductcomparison(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.ProductComparisonResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.ProductComparisonResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.ProductComparisonResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.ProductComparisonResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductcomparisonList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msyrpc.Product.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Product productComparison = 1;
 * @return {!Array<!proto.msyrpc.Product>}
 */
proto.msyrpc.ProductComparisonResponse.prototype.getProductcomparisonList = function() {
  return /** @type{!Array<!proto.msyrpc.Product>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.Product, 1));
};


/** @param {!Array<!proto.msyrpc.Product>} value */
proto.msyrpc.ProductComparisonResponse.prototype.setProductcomparisonList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msyrpc.Product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.Product}
 */
proto.msyrpc.ProductComparisonResponse.prototype.addProductcomparison = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msyrpc.Product, opt_index);
};


proto.msyrpc.ProductComparisonResponse.prototype.clearProductcomparisonList = function() {
  this.setProductcomparisonList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.UpdateProductDescriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.UpdateProductDescriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.UpdateProductDescriptionResponse.displayName = 'proto.msyrpc.UpdateProductDescriptionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.UpdateProductDescriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.UpdateProductDescriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.UpdateProductDescriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateProductDescriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.UpdateProductDescriptionResponse}
 */
proto.msyrpc.UpdateProductDescriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.UpdateProductDescriptionResponse;
  return proto.msyrpc.UpdateProductDescriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.UpdateProductDescriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.UpdateProductDescriptionResponse}
 */
proto.msyrpc.UpdateProductDescriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.UpdateProductDescriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.UpdateProductDescriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.UpdateProductDescriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateProductDescriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.msyrpc.UpdateProductDescriptionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.UpdateProductDescriptionResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.UpdatedCompetitor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.UpdatedCompetitor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.UpdatedCompetitor.displayName = 'proto.msyrpc.UpdatedCompetitor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.UpdatedCompetitor.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.UpdatedCompetitor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.UpdatedCompetitor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdatedCompetitor.toObject = function(includeInstance, msg) {
  var f, obj = {
    competitorid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    updatedtier: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.UpdatedCompetitor}
 */
proto.msyrpc.UpdatedCompetitor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.UpdatedCompetitor;
  return proto.msyrpc.UpdatedCompetitor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.UpdatedCompetitor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.UpdatedCompetitor}
 */
proto.msyrpc.UpdatedCompetitor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompetitorid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedtier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.UpdatedCompetitor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.UpdatedCompetitor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.UpdatedCompetitor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdatedCompetitor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompetitorid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUpdatedtier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 competitorId = 1;
 * @return {number}
 */
proto.msyrpc.UpdatedCompetitor.prototype.getCompetitorid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msyrpc.UpdatedCompetitor.prototype.setCompetitorid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string updatedTier = 2;
 * @return {string}
 */
proto.msyrpc.UpdatedCompetitor.prototype.getUpdatedtier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.msyrpc.UpdatedCompetitor.prototype.setUpdatedtier = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.UpdateCompetitorTierRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.UpdateCompetitorTierRequest.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.UpdateCompetitorTierRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.UpdateCompetitorTierRequest.displayName = 'proto.msyrpc.UpdateCompetitorTierRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.UpdateCompetitorTierRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.UpdateCompetitorTierRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.UpdateCompetitorTierRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.UpdateCompetitorTierRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateCompetitorTierRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatedcompetitorList: jspb.Message.toObjectList(msg.getUpdatedcompetitorList(),
    proto.msyrpc.UpdatedCompetitor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.UpdateCompetitorTierRequest}
 */
proto.msyrpc.UpdateCompetitorTierRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.UpdateCompetitorTierRequest;
  return proto.msyrpc.UpdateCompetitorTierRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.UpdateCompetitorTierRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.UpdateCompetitorTierRequest}
 */
proto.msyrpc.UpdateCompetitorTierRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msyrpc.UpdatedCompetitor;
      reader.readMessage(value,proto.msyrpc.UpdatedCompetitor.deserializeBinaryFromReader);
      msg.addUpdatedcompetitor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.UpdateCompetitorTierRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.UpdateCompetitorTierRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.UpdateCompetitorTierRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateCompetitorTierRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatedcompetitorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msyrpc.UpdatedCompetitor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UpdatedCompetitor updatedCompetitor = 1;
 * @return {!Array<!proto.msyrpc.UpdatedCompetitor>}
 */
proto.msyrpc.UpdateCompetitorTierRequest.prototype.getUpdatedcompetitorList = function() {
  return /** @type{!Array<!proto.msyrpc.UpdatedCompetitor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.UpdatedCompetitor, 1));
};


/** @param {!Array<!proto.msyrpc.UpdatedCompetitor>} value */
proto.msyrpc.UpdateCompetitorTierRequest.prototype.setUpdatedcompetitorList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msyrpc.UpdatedCompetitor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.UpdatedCompetitor}
 */
proto.msyrpc.UpdateCompetitorTierRequest.prototype.addUpdatedcompetitor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msyrpc.UpdatedCompetitor, opt_index);
};


proto.msyrpc.UpdateCompetitorTierRequest.prototype.clearUpdatedcompetitorList = function() {
  this.setUpdatedcompetitorList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.DeleteCompetitorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.DeleteCompetitorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.DeleteCompetitorRequest.displayName = 'proto.msyrpc.DeleteCompetitorRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.DeleteCompetitorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.DeleteCompetitorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.DeleteCompetitorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.DeleteCompetitorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    competitorid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.DeleteCompetitorRequest}
 */
proto.msyrpc.DeleteCompetitorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.DeleteCompetitorRequest;
  return proto.msyrpc.DeleteCompetitorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.DeleteCompetitorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.DeleteCompetitorRequest}
 */
proto.msyrpc.DeleteCompetitorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompetitorid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.DeleteCompetitorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.DeleteCompetitorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.DeleteCompetitorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.DeleteCompetitorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompetitorid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 competitorId = 1;
 * @return {number}
 */
proto.msyrpc.DeleteCompetitorRequest.prototype.getCompetitorid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msyrpc.DeleteCompetitorRequest.prototype.setCompetitorid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.AddCompetitorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.AddCompetitorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.AddCompetitorRequest.displayName = 'proto.msyrpc.AddCompetitorRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.AddCompetitorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.AddCompetitorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.AddCompetitorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AddCompetitorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tier: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.AddCompetitorRequest}
 */
proto.msyrpc.AddCompetitorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.AddCompetitorRequest;
  return proto.msyrpc.AddCompetitorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.AddCompetitorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.AddCompetitorRequest}
 */
proto.msyrpc.AddCompetitorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.AddCompetitorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.AddCompetitorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.AddCompetitorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AddCompetitorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.msyrpc.AddCompetitorRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.AddCompetitorRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tier = 2;
 * @return {string}
 */
proto.msyrpc.AddCompetitorRequest.prototype.getTier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.msyrpc.AddCompetitorRequest.prototype.setTier = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.UpdateCompetitorTierResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.UpdateCompetitorTierResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.UpdateCompetitorTierResponse.displayName = 'proto.msyrpc.UpdateCompetitorTierResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.UpdateCompetitorTierResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.UpdateCompetitorTierResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.UpdateCompetitorTierResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateCompetitorTierResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.UpdateCompetitorTierResponse}
 */
proto.msyrpc.UpdateCompetitorTierResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.UpdateCompetitorTierResponse;
  return proto.msyrpc.UpdateCompetitorTierResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.UpdateCompetitorTierResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.UpdateCompetitorTierResponse}
 */
proto.msyrpc.UpdateCompetitorTierResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.UpdateCompetitorTierResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.UpdateCompetitorTierResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.UpdateCompetitorTierResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateCompetitorTierResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.msyrpc.UpdateCompetitorTierResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.UpdateCompetitorTierResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.DeleteCompetitorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.DeleteCompetitorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.DeleteCompetitorResponse.displayName = 'proto.msyrpc.DeleteCompetitorResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.DeleteCompetitorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.DeleteCompetitorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.DeleteCompetitorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.DeleteCompetitorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.DeleteCompetitorResponse}
 */
proto.msyrpc.DeleteCompetitorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.DeleteCompetitorResponse;
  return proto.msyrpc.DeleteCompetitorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.DeleteCompetitorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.DeleteCompetitorResponse}
 */
proto.msyrpc.DeleteCompetitorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.DeleteCompetitorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.DeleteCompetitorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.DeleteCompetitorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.DeleteCompetitorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.msyrpc.DeleteCompetitorResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.DeleteCompetitorResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.AddCompetitorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.AddCompetitorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.AddCompetitorResponse.displayName = 'proto.msyrpc.AddCompetitorResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.AddCompetitorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.AddCompetitorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.AddCompetitorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AddCompetitorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.AddCompetitorResponse}
 */
proto.msyrpc.AddCompetitorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.AddCompetitorResponse;
  return proto.msyrpc.AddCompetitorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.AddCompetitorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.AddCompetitorResponse}
 */
proto.msyrpc.AddCompetitorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.AddCompetitorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.AddCompetitorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.AddCompetitorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AddCompetitorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.msyrpc.AddCompetitorResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.AddCompetitorResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.StateCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.StateCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.StateCategory.displayName = 'proto.msyrpc.StateCategory';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.StateCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.StateCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.StateCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.StateCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    category: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.StateCategory}
 */
proto.msyrpc.StateCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.StateCategory;
  return proto.msyrpc.StateCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.StateCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.StateCategory}
 */
proto.msyrpc.StateCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.StateCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.StateCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.StateCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.StateCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.msyrpc.StateCategory.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msyrpc.StateCategory.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.msyrpc.StateCategory.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.msyrpc.StateCategory.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string category = 3;
 * @return {string}
 */
proto.msyrpc.StateCategory.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.msyrpc.StateCategory.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.UpdateCategoryStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.UpdateCategoryStateRequest.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.UpdateCategoryStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.UpdateCategoryStateRequest.displayName = 'proto.msyrpc.UpdateCategoryStateRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.UpdateCategoryStateRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.UpdateCategoryStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.UpdateCategoryStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.UpdateCategoryStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateCategoryStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatedcategoriesList: jspb.Message.toObjectList(msg.getUpdatedcategoriesList(),
    proto.msyrpc.StateCategory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.UpdateCategoryStateRequest}
 */
proto.msyrpc.UpdateCategoryStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.UpdateCategoryStateRequest;
  return proto.msyrpc.UpdateCategoryStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.UpdateCategoryStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.UpdateCategoryStateRequest}
 */
proto.msyrpc.UpdateCategoryStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msyrpc.StateCategory;
      reader.readMessage(value,proto.msyrpc.StateCategory.deserializeBinaryFromReader);
      msg.addUpdatedcategories(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.UpdateCategoryStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.UpdateCategoryStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.UpdateCategoryStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateCategoryStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatedcategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msyrpc.StateCategory.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StateCategory updatedCategories = 1;
 * @return {!Array<!proto.msyrpc.StateCategory>}
 */
proto.msyrpc.UpdateCategoryStateRequest.prototype.getUpdatedcategoriesList = function() {
  return /** @type{!Array<!proto.msyrpc.StateCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.StateCategory, 1));
};


/** @param {!Array<!proto.msyrpc.StateCategory>} value */
proto.msyrpc.UpdateCategoryStateRequest.prototype.setUpdatedcategoriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msyrpc.StateCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.StateCategory}
 */
proto.msyrpc.UpdateCategoryStateRequest.prototype.addUpdatedcategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msyrpc.StateCategory, opt_index);
};


proto.msyrpc.UpdateCategoryStateRequest.prototype.clearUpdatedcategoriesList = function() {
  this.setUpdatedcategoriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.UpdateCategoryStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.UpdateCategoryStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.UpdateCategoryStateResponse.displayName = 'proto.msyrpc.UpdateCategoryStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.UpdateCategoryStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.UpdateCategoryStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.UpdateCategoryStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateCategoryStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.UpdateCategoryStateResponse}
 */
proto.msyrpc.UpdateCategoryStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.UpdateCategoryStateResponse;
  return proto.msyrpc.UpdateCategoryStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.UpdateCategoryStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.UpdateCategoryStateResponse}
 */
proto.msyrpc.UpdateCategoryStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.UpdateCategoryStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.UpdateCategoryStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.UpdateCategoryStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.UpdateCategoryStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.msyrpc.UpdateCategoryStateResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.UpdateCategoryStateResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.AllStateCategoryTypesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.AllStateCategoryTypesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.AllStateCategoryTypesRequest.displayName = 'proto.msyrpc.AllStateCategoryTypesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.AllStateCategoryTypesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.AllStateCategoryTypesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.AllStateCategoryTypesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllStateCategoryTypesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.AllStateCategoryTypesRequest}
 */
proto.msyrpc.AllStateCategoryTypesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.AllStateCategoryTypesRequest;
  return proto.msyrpc.AllStateCategoryTypesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.AllStateCategoryTypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.AllStateCategoryTypesRequest}
 */
proto.msyrpc.AllStateCategoryTypesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.AllStateCategoryTypesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.AllStateCategoryTypesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.AllStateCategoryTypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllStateCategoryTypesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.AllStateCategoryTypesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.AllStateCategoryTypesResponse.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.AllStateCategoryTypesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.AllStateCategoryTypesResponse.displayName = 'proto.msyrpc.AllStateCategoryTypesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.AllStateCategoryTypesResponse.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.AllStateCategoryTypesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.AllStateCategoryTypesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllStateCategoryTypesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    categorydailyList: jspb.Message.toObjectList(msg.getCategorydailyList(),
    proto.msyrpc.StateCategory.toObject, includeInstance),
    categorymondayandthursdayList: jspb.Message.toObjectList(msg.getCategorymondayandthursdayList(),
    proto.msyrpc.StateCategory.toObject, includeInstance),
    categorytuesdayandfridayList: jspb.Message.toObjectList(msg.getCategorytuesdayandfridayList(),
    proto.msyrpc.StateCategory.toObject, includeInstance),
    categorywednesdayandsaturdayList: jspb.Message.toObjectList(msg.getCategorywednesdayandsaturdayList(),
    proto.msyrpc.StateCategory.toObject, includeInstance),
    categoryunassignedList: jspb.Message.toObjectList(msg.getCategoryunassignedList(),
    proto.msyrpc.StateCategory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.AllStateCategoryTypesResponse}
 */
proto.msyrpc.AllStateCategoryTypesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.AllStateCategoryTypesResponse;
  return proto.msyrpc.AllStateCategoryTypesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.AllStateCategoryTypesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.AllStateCategoryTypesResponse}
 */
proto.msyrpc.AllStateCategoryTypesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msyrpc.StateCategory;
      reader.readMessage(value,proto.msyrpc.StateCategory.deserializeBinaryFromReader);
      msg.addCategorydaily(value);
      break;
    case 2:
      var value = new proto.msyrpc.StateCategory;
      reader.readMessage(value,proto.msyrpc.StateCategory.deserializeBinaryFromReader);
      msg.addCategorymondayandthursday(value);
      break;
    case 3:
      var value = new proto.msyrpc.StateCategory;
      reader.readMessage(value,proto.msyrpc.StateCategory.deserializeBinaryFromReader);
      msg.addCategorytuesdayandfriday(value);
      break;
    case 4:
      var value = new proto.msyrpc.StateCategory;
      reader.readMessage(value,proto.msyrpc.StateCategory.deserializeBinaryFromReader);
      msg.addCategorywednesdayandsaturday(value);
      break;
    case 5:
      var value = new proto.msyrpc.StateCategory;
      reader.readMessage(value,proto.msyrpc.StateCategory.deserializeBinaryFromReader);
      msg.addCategoryunassigned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.AllStateCategoryTypesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.AllStateCategoryTypesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AllStateCategoryTypesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategorydailyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msyrpc.StateCategory.serializeBinaryToWriter
    );
  }
  f = message.getCategorymondayandthursdayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.msyrpc.StateCategory.serializeBinaryToWriter
    );
  }
  f = message.getCategorytuesdayandfridayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.msyrpc.StateCategory.serializeBinaryToWriter
    );
  }
  f = message.getCategorywednesdayandsaturdayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.msyrpc.StateCategory.serializeBinaryToWriter
    );
  }
  f = message.getCategoryunassignedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.msyrpc.StateCategory.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StateCategory categoryDaily = 1;
 * @return {!Array<!proto.msyrpc.StateCategory>}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.getCategorydailyList = function() {
  return /** @type{!Array<!proto.msyrpc.StateCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.StateCategory, 1));
};


/** @param {!Array<!proto.msyrpc.StateCategory>} value */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.setCategorydailyList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msyrpc.StateCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.StateCategory}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.addCategorydaily = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msyrpc.StateCategory, opt_index);
};


proto.msyrpc.AllStateCategoryTypesResponse.prototype.clearCategorydailyList = function() {
  this.setCategorydailyList([]);
};


/**
 * repeated StateCategory categoryMondayAndThursday = 2;
 * @return {!Array<!proto.msyrpc.StateCategory>}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.getCategorymondayandthursdayList = function() {
  return /** @type{!Array<!proto.msyrpc.StateCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.StateCategory, 2));
};


/** @param {!Array<!proto.msyrpc.StateCategory>} value */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.setCategorymondayandthursdayList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.msyrpc.StateCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.StateCategory}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.addCategorymondayandthursday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.msyrpc.StateCategory, opt_index);
};


proto.msyrpc.AllStateCategoryTypesResponse.prototype.clearCategorymondayandthursdayList = function() {
  this.setCategorymondayandthursdayList([]);
};


/**
 * repeated StateCategory categoryTuesdayAndFriday = 3;
 * @return {!Array<!proto.msyrpc.StateCategory>}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.getCategorytuesdayandfridayList = function() {
  return /** @type{!Array<!proto.msyrpc.StateCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.StateCategory, 3));
};


/** @param {!Array<!proto.msyrpc.StateCategory>} value */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.setCategorytuesdayandfridayList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.msyrpc.StateCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.StateCategory}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.addCategorytuesdayandfriday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.msyrpc.StateCategory, opt_index);
};


proto.msyrpc.AllStateCategoryTypesResponse.prototype.clearCategorytuesdayandfridayList = function() {
  this.setCategorytuesdayandfridayList([]);
};


/**
 * repeated StateCategory categoryWednesdayAndSaturday = 4;
 * @return {!Array<!proto.msyrpc.StateCategory>}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.getCategorywednesdayandsaturdayList = function() {
  return /** @type{!Array<!proto.msyrpc.StateCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.StateCategory, 4));
};


/** @param {!Array<!proto.msyrpc.StateCategory>} value */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.setCategorywednesdayandsaturdayList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msyrpc.StateCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.StateCategory}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.addCategorywednesdayandsaturday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msyrpc.StateCategory, opt_index);
};


proto.msyrpc.AllStateCategoryTypesResponse.prototype.clearCategorywednesdayandsaturdayList = function() {
  this.setCategorywednesdayandsaturdayList([]);
};


/**
 * repeated StateCategory categoryUnassigned = 5;
 * @return {!Array<!proto.msyrpc.StateCategory>}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.getCategoryunassignedList = function() {
  return /** @type{!Array<!proto.msyrpc.StateCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.StateCategory, 5));
};


/** @param {!Array<!proto.msyrpc.StateCategory>} value */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.setCategoryunassignedList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msyrpc.StateCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.StateCategory}
 */
proto.msyrpc.AllStateCategoryTypesResponse.prototype.addCategoryunassigned = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msyrpc.StateCategory, opt_index);
};


proto.msyrpc.AllStateCategoryTypesResponse.prototype.clearCategoryunassignedList = function() {
  this.setCategoryunassignedList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.CategoryMargin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.CategoryMargin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.CategoryMargin.displayName = 'proto.msyrpc.CategoryMargin';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.CategoryMargin.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.CategoryMargin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.CategoryMargin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.CategoryMargin.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    start: jspb.Message.getFieldWithDefault(msg, 2, 0),
    end: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.CategoryMargin}
 */
proto.msyrpc.CategoryMargin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.CategoryMargin;
  return proto.msyrpc.CategoryMargin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.CategoryMargin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.CategoryMargin}
 */
proto.msyrpc.CategoryMargin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTarget(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStart(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.CategoryMargin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.CategoryMargin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.CategoryMargin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.CategoryMargin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional float target = 1;
 * @return {number}
 */
proto.msyrpc.CategoryMargin.prototype.getTarget = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.msyrpc.CategoryMargin.prototype.setTarget = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int32 start = 2;
 * @return {number}
 */
proto.msyrpc.CategoryMargin.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.msyrpc.CategoryMargin.prototype.setStart = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 end = 3;
 * @return {number}
 */
proto.msyrpc.CategoryMargin.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.msyrpc.CategoryMargin.prototype.setEnd = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.GetCategoryMarginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.GetCategoryMarginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.GetCategoryMarginRequest.displayName = 'proto.msyrpc.GetCategoryMarginRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.GetCategoryMarginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.GetCategoryMarginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.GetCategoryMarginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetCategoryMarginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.GetCategoryMarginRequest}
 */
proto.msyrpc.GetCategoryMarginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.GetCategoryMarginRequest;
  return proto.msyrpc.GetCategoryMarginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.GetCategoryMarginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.GetCategoryMarginRequest}
 */
proto.msyrpc.GetCategoryMarginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.GetCategoryMarginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.GetCategoryMarginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.GetCategoryMarginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetCategoryMarginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.GetCategoryMarginResponseItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.GetCategoryMarginResponseItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.GetCategoryMarginResponseItem.displayName = 'proto.msyrpc.GetCategoryMarginResponseItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.GetCategoryMarginResponseItem.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.GetCategoryMarginResponseItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.GetCategoryMarginResponseItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetCategoryMarginResponseItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    margin: (f = msg.getMargin()) && proto.msyrpc.CategoryMargin.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.GetCategoryMarginResponseItem}
 */
proto.msyrpc.GetCategoryMarginResponseItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.GetCategoryMarginResponseItem;
  return proto.msyrpc.GetCategoryMarginResponseItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.GetCategoryMarginResponseItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.GetCategoryMarginResponseItem}
 */
proto.msyrpc.GetCategoryMarginResponseItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.msyrpc.CategoryMargin;
      reader.readMessage(value,proto.msyrpc.CategoryMargin.deserializeBinaryFromReader);
      msg.setMargin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.GetCategoryMarginResponseItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.GetCategoryMarginResponseItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.GetCategoryMarginResponseItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetCategoryMarginResponseItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMargin();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.msyrpc.CategoryMargin.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.msyrpc.GetCategoryMarginResponseItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msyrpc.GetCategoryMarginResponseItem.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.msyrpc.GetCategoryMarginResponseItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.msyrpc.GetCategoryMarginResponseItem.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CategoryMargin margin = 3;
 * @return {?proto.msyrpc.CategoryMargin}
 */
proto.msyrpc.GetCategoryMarginResponseItem.prototype.getMargin = function() {
  return /** @type{?proto.msyrpc.CategoryMargin} */ (
    jspb.Message.getWrapperField(this, proto.msyrpc.CategoryMargin, 3));
};


/** @param {?proto.msyrpc.CategoryMargin|undefined} value */
proto.msyrpc.GetCategoryMarginResponseItem.prototype.setMargin = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.msyrpc.GetCategoryMarginResponseItem.prototype.clearMargin = function() {
  this.setMargin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msyrpc.GetCategoryMarginResponseItem.prototype.hasMargin = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.GetCategoryMarginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msyrpc.GetCategoryMarginResponse.repeatedFields_, null);
};
goog.inherits(proto.msyrpc.GetCategoryMarginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.GetCategoryMarginResponse.displayName = 'proto.msyrpc.GetCategoryMarginResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msyrpc.GetCategoryMarginResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.GetCategoryMarginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.GetCategoryMarginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.GetCategoryMarginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetCategoryMarginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    categorymarginsList: jspb.Message.toObjectList(msg.getCategorymarginsList(),
    proto.msyrpc.GetCategoryMarginResponseItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.GetCategoryMarginResponse}
 */
proto.msyrpc.GetCategoryMarginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.GetCategoryMarginResponse;
  return proto.msyrpc.GetCategoryMarginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.GetCategoryMarginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.GetCategoryMarginResponse}
 */
proto.msyrpc.GetCategoryMarginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msyrpc.GetCategoryMarginResponseItem;
      reader.readMessage(value,proto.msyrpc.GetCategoryMarginResponseItem.deserializeBinaryFromReader);
      msg.addCategorymargins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.GetCategoryMarginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.GetCategoryMarginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.GetCategoryMarginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.GetCategoryMarginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategorymarginsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msyrpc.GetCategoryMarginResponseItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GetCategoryMarginResponseItem categoryMargins = 1;
 * @return {!Array<!proto.msyrpc.GetCategoryMarginResponseItem>}
 */
proto.msyrpc.GetCategoryMarginResponse.prototype.getCategorymarginsList = function() {
  return /** @type{!Array<!proto.msyrpc.GetCategoryMarginResponseItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msyrpc.GetCategoryMarginResponseItem, 1));
};


/** @param {!Array<!proto.msyrpc.GetCategoryMarginResponseItem>} value */
proto.msyrpc.GetCategoryMarginResponse.prototype.setCategorymarginsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msyrpc.GetCategoryMarginResponseItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msyrpc.GetCategoryMarginResponseItem}
 */
proto.msyrpc.GetCategoryMarginResponse.prototype.addCategorymargins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msyrpc.GetCategoryMarginResponseItem, opt_index);
};


proto.msyrpc.GetCategoryMarginResponse.prototype.clearCategorymarginsList = function() {
  this.setCategorymarginsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.AddCategoryMarginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.AddCategoryMarginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.AddCategoryMarginRequest.displayName = 'proto.msyrpc.AddCategoryMarginRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.AddCategoryMarginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.AddCategoryMarginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.AddCategoryMarginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AddCategoryMarginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    category: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pricerangestart: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pricerangeend: jspb.Message.getFieldWithDefault(msg, 3, 0),
    margin: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    id: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.AddCategoryMarginRequest}
 */
proto.msyrpc.AddCategoryMarginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.AddCategoryMarginRequest;
  return proto.msyrpc.AddCategoryMarginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.AddCategoryMarginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.AddCategoryMarginRequest}
 */
proto.msyrpc.AddCategoryMarginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPricerangestart(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPricerangeend(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMargin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.AddCategoryMarginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.AddCategoryMarginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.AddCategoryMarginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AddCategoryMarginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPricerangestart();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPricerangeend();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMargin();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string category = 1;
 * @return {string}
 */
proto.msyrpc.AddCategoryMarginRequest.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.AddCategoryMarginRequest.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 priceRangeStart = 2;
 * @return {number}
 */
proto.msyrpc.AddCategoryMarginRequest.prototype.getPricerangestart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.msyrpc.AddCategoryMarginRequest.prototype.setPricerangestart = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 priceRangeEnd = 3;
 * @return {number}
 */
proto.msyrpc.AddCategoryMarginRequest.prototype.getPricerangeend = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.msyrpc.AddCategoryMarginRequest.prototype.setPricerangeend = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional float margin = 4;
 * @return {number}
 */
proto.msyrpc.AddCategoryMarginRequest.prototype.getMargin = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.msyrpc.AddCategoryMarginRequest.prototype.setMargin = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 id = 5;
 * @return {number}
 */
proto.msyrpc.AddCategoryMarginRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.msyrpc.AddCategoryMarginRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.AddCategoryMarginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.AddCategoryMarginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.AddCategoryMarginResponse.displayName = 'proto.msyrpc.AddCategoryMarginResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.AddCategoryMarginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.AddCategoryMarginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.AddCategoryMarginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AddCategoryMarginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.AddCategoryMarginResponse}
 */
proto.msyrpc.AddCategoryMarginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.AddCategoryMarginResponse;
  return proto.msyrpc.AddCategoryMarginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.AddCategoryMarginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.AddCategoryMarginResponse}
 */
proto.msyrpc.AddCategoryMarginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.AddCategoryMarginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.AddCategoryMarginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.AddCategoryMarginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.AddCategoryMarginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.msyrpc.AddCategoryMarginResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.AddCategoryMarginResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.DeleteCategoryMarginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.DeleteCategoryMarginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.DeleteCategoryMarginRequest.displayName = 'proto.msyrpc.DeleteCategoryMarginRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.DeleteCategoryMarginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.DeleteCategoryMarginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.DeleteCategoryMarginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.DeleteCategoryMarginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.DeleteCategoryMarginRequest}
 */
proto.msyrpc.DeleteCategoryMarginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.DeleteCategoryMarginRequest;
  return proto.msyrpc.DeleteCategoryMarginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.DeleteCategoryMarginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.DeleteCategoryMarginRequest}
 */
proto.msyrpc.DeleteCategoryMarginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.DeleteCategoryMarginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.DeleteCategoryMarginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.DeleteCategoryMarginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.DeleteCategoryMarginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.msyrpc.DeleteCategoryMarginRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msyrpc.DeleteCategoryMarginRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msyrpc.DeleteCategoryMarginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msyrpc.DeleteCategoryMarginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msyrpc.DeleteCategoryMarginResponse.displayName = 'proto.msyrpc.DeleteCategoryMarginResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msyrpc.DeleteCategoryMarginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msyrpc.DeleteCategoryMarginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msyrpc.DeleteCategoryMarginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.DeleteCategoryMarginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msyrpc.DeleteCategoryMarginResponse}
 */
proto.msyrpc.DeleteCategoryMarginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msyrpc.DeleteCategoryMarginResponse;
  return proto.msyrpc.DeleteCategoryMarginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msyrpc.DeleteCategoryMarginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msyrpc.DeleteCategoryMarginResponse}
 */
proto.msyrpc.DeleteCategoryMarginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msyrpc.DeleteCategoryMarginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msyrpc.DeleteCategoryMarginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msyrpc.DeleteCategoryMarginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msyrpc.DeleteCategoryMarginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.msyrpc.DeleteCategoryMarginResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msyrpc.DeleteCategoryMarginResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.msyrpc);
